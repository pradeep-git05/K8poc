node{
    
    stage("Git clone"){
        git credentialsId: 'GIT_CREDENTIALS', url: 'https://github.com/pradeep-git05/K8poc.git'
    }
    
    stage("Maven Clean Build"){
        
        def mavenHome = tool name: "Maven-3.6.1" , type: "maven"
        def mavenCMD = "${mavenHome}/bin/mvn "
        sh "${mavenCMD} clean package"
    }
    // stage("docker"){
    //     docker.withRegistry('https://index.docker.io/v2/pradeepbhavanam', 'Docker_Credentials') {

    //     def customImage = docker.build("pradeepbhavanam/reddy:latest")

    //     /* Push the container to the custom Registry */
    //     customImage.push()
    // }
    // }
    stage("Build Docker Image"){
       withCredentials([string(credentialsId: 'DOCKER_HUB_CREDENTIAL', variable: 'DOCKER_HUB_CREDENTIAL')]) {
    }    
        sh "docker build -t pradeepbhavanam/spring-boot-mongo:${env.BUILD_NUMBER} ."
      
    }
    
    stage("Docker Push"){
        
        sh """
        echo Deepu@1985 | docker login --username pradeepbhavanam --password-stdin
        
        docker push pradeepbhavanam/spring-boot-mongo:${env.BUILD_NUMBER}
        """
    }
    /**
     stage("Deploy To Kuberates Cluster"){
         kubernetesDeploy(
            configs: 'springBootMongo.yml', 
            kubeconfigId: 'KUBERNATES_CONFIG',
            enableConfigSubstitution: true
           )
        }
	 
	  
      stage("Deploy To Kuberates Cluster"){
        sh 'kubectl apply -f springBootMongo.yml'
      } **/
}


